{"ast":null,"code":"var _jsxFileName = \"/Users/mihirprakash/Desktop/ricecompsecs25-hw4-hw4-starter/social/frontend/src/main/posts.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { Form, Box, Stack, Text, useColorModeValue, Image, Button, HStack, Center, FormControl, FormLabel, Input, Heading, Flex } from \"@chakra-ui/react\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport UserContext from '../users/usercontext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post(props) {\n  _s();\n  const [realPostText, setRealPostText] = useState(props.caption);\n  const [newPostText, setNewPostText] = useState(realPostText);\n  const [formVisible, setFormVisible] = useState(false);\n  function openForm() {\n    setFormVisible(true);\n  }\n  function closeForm() {\n    setFormVisible(false);\n  }\n  function handleUpdate() {\n    setRealPostText(newPostText);\n    closeForm();\n    // Add logic here to send the updated caption to the server if needed\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    height: \"600px\",\n    width: \"16vw\",\n    rounded: \"lg\",\n    bg: \"gray.300\",\n    boxShadow: \"lg\",\n    p: 8,\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        size: \"16px\",\n        fontWeight: \"bold\",\n        children: [\"Author: \", props.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        src: props.src\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Caption: \", realPostText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        id: \"edit form\",\n        display: formVisible ? 'block' : 'none',\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          color: \"blue.400\",\n          children: \"Edit Post:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: newPostText,\n          onChange: e => setNewPostText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleUpdate,\n          size: \"lg\",\n          bg: 'blue.400',\n          color: 'white',\n          _hover: {\n            bg: 'blue.500'\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        backgroundColor: \"blue.400\",\n        textColor: \"white\",\n        onClick: openForm,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        backgroundColor: \"blue.400\",\n        textColor: \"white\",\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n_s(Post, \"tcJPYaBIQogbumbBRhqp25KJY54=\");\n_c = Post;\nfunction Posts(props) {\n  _s2();\n  const [page, setPage] = useState(1);\n  const perPage = 3;\n  const {\n    user,\n    allUsers\n  } = useContext(UserContext);\n  const [searchTerm, setSearchTerm] = useState('');\n  // var filteredPosts\n  //var displayedPosts;\n  const [displayedPosts, setDisplayedPosts] = useState([]); // State to store fetched posts\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://peaceful-dusk-46842-f6cd8d1740b7.herokuapp.com/articles', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch articles');\n        }\n        const data = await response.json();\n        props.setFilteredPosts(data.articles);\n      } catch (error) {\n        console.error('Error fetching articles:', error.message);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // if (props.filteredPosts.length < perPage) {\n  //     setDisplayedPosts(props.filteredPosts);\n  // }\n  // else {\n  //     setDisplayedPosts(props.filteredPosts.slice((page - 1) * perPage, page * perPage));\n  // }\n  console.log(props.filteredPosts);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    align: \"start\",\n    alignItems: \"start\",\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        height: \"100px\",\n        rounded: 'lg',\n        bg: \"gray.300\",\n        boxShadow: 'lg',\n        p: 8,\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          color: \"blue.400\",\n          fontSize: '4xl',\n          textAlign: 'center',\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPost, {\n        setFilteredPosts: props.setFilteredPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        height: \"150px\",\n        rounded: 'lg',\n        bg: \"gray.300\",\n        boxShadow: 'lg',\n        p: 8,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            color: \"blue.400\",\n            children: \"Search for Posts:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Search posts\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(HStack, {\n          spacing: 4,\n          children: [props.filteredPosts.filter(post => post.text && post.text.includes(searchTerm) || post.author && post.author.includes(searchTerm)).sort((a, b) => b.pid - a.pid).slice((page - 1) * 4, page * 4).map(post => /*#__PURE__*/_jsxDEV(Post, {\n            // Add a unique key\n            src: post.image,\n            caption: post.text,\n            author: post.author\n          }, post.pid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 7\n          }, this)), props.filteredPosts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No matching posts found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(HStack, {\n          align: 'center',\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            backgroundColor: \"blue.400\",\n            textColor: \"white\",\n            onClick: () => setPage(() => {\n              if (page === 1) {\n                return page;\n              } else {\n                console.log(page - 1);\n                return page - 1;\n              }\n            }),\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            backgroundColor: \"blue.400\",\n            textColor: \"white\",\n            onClick: () => setPage(() => {\n              if (page === Math.ceil(props.filteredPosts.filter(post => post.text && post.text.includes(searchTerm) || post.author && post.author.includes(searchTerm)).length / 4)) {\n                return page;\n              } else {\n                console.log(page + 1);\n                return page + 1;\n              }\n            }),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s2(Posts, \"hr9QxKDq0F88VS3cZXBUnXl8hYk=\");\n_c2 = Posts;\nfunction AddPost(props) {\n  _s3();\n  const [newPostText, setNewPostText] = useState('');\n  const [tempImage, setTempImage] = useState(new File([], 'temp.txt'));\n  //const setFilteredPosts = props.setFilteredPosts;\n  //const { user, setUser, allUsers, setAllPosts } = useContext(UserContext);\n  //console.log(\"prev user: \" + JSON.stringify(user));\n  const clearPost = () => {\n    document.getElementById('newpost').reset();\n  };\n  const newPost = async () => {\n    console.log(newPostText);\n    const fd = new FormData();\n    console.log(tempImage);\n    fd.append('image', tempImage);\n    fd.append('text', newPostText);\n    try {\n      const response = await fetch('https://peaceful-dusk-46842-f6cd8d1740b7.herokuapp.com/article', {\n        method: 'POST',\n        credentials: 'include',\n        body: fd\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add article');\n      }\n      const data = await response.json();\n      console.log(data.articles);\n      props.setFilteredPosts(data.articles);\n    } catch (error) {\n      console.error('Error fetching articles:', error.message);\n    }\n    clearPost();\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    height: \"300px\",\n    width: \"78vw\",\n    rounded: 'lg',\n    bg: \"gray.300\",\n    boxShadow: 'lg',\n    p: 8,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"newpost\",\n      onSubmit: e => {\n        e.preventDefault();\n        newPost();\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        height: '200px',\n        spacing: 5,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          color: \"blue.400\",\n          fontSize: '3xl',\n          textAlign: 'center',\n          children: \"Add New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"photo\",\n              children: \"Add Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"file\",\n              id: \"photo\",\n              accept: \"image/*\",\n              isRequired: true,\n              onChange: e => setTempImage(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"New Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Your Post Here\",\n              isRequired: true,\n              onChange: e => setNewPostText(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Center, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              backgroundColor: \"blue.400\",\n              textColor: \"white\",\n              onClick: clearPost,\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              backgroundColor: \"blue.400\",\n              textColor: \"white\",\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 9\n  }, this);\n}\n_s3(AddPost, \"SiMKRSqYjmj/zUEgZy6Yoi2CaaY=\");\n_c3 = AddPost;\nexport default Posts;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Posts\");\n$RefreshReg$(_c3, \"AddPost\");","map":{"version":3,"names":["Form","Box","Stack","Text","useColorModeValue","Image","Button","HStack","Center","FormControl","FormLabel","Input","Heading","Flex","React","useState","useContext","useEffect","UserContext","jsxDEV","_jsxDEV","Post","props","_s","realPostText","setRealPostText","caption","newPostText","setNewPostText","formVisible","setFormVisible","openForm","closeForm","handleUpdate","height","width","rounded","bg","boxShadow","p","children","size","fontWeight","author","fileName","_jsxFileName","lineNumber","columnNumber","src","id","display","color","value","onChange","e","target","onClick","_hover","backgroundColor","textColor","_c","Posts","_s2","page","setPage","perPage","user","allUsers","searchTerm","setSearchTerm","displayedPosts","setDisplayedPosts","fetchData","response","fetch","method","credentials","ok","Error","data","json","setFilteredPosts","articles","error","console","message","log","filteredPosts","align","alignItems","fontSize","textAlign","AddPost","placeholder","spacing","filter","post","text","includes","sort","a","b","pid","slice","map","image","length","Math","ceil","_c2","_s3","tempImage","setTempImage","File","clearPost","document","getElementById","reset","newPost","fd","FormData","append","body","onSubmit","preventDefault","htmlFor","type","accept","isRequired","files","_c3","$RefreshReg$"],"sources":["/Users/mihirprakash/Desktop/ricecompsecs25-hw4-hw4-starter/social/frontend/src/main/posts.js"],"sourcesContent":["import {Form, Box, Stack, Text, useColorModeValue, Image, Button, HStack, Center, FormControl, FormLabel, Input, Heading, Flex} from \"@chakra-ui/react\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport UserContext from '../users/usercontext';\n\nfunction Post(props) {\n    const [realPostText, setRealPostText] = useState(props.caption);\n    const [newPostText, setNewPostText] = useState(realPostText);\n    const [formVisible, setFormVisible] = useState(false);\n  \n    function openForm() {\n      setFormVisible(true);\n    }\n  \n    function closeForm() {\n      setFormVisible(false);\n    }\n  \n    function handleUpdate() {\n      setRealPostText(newPostText);\n      closeForm();\n      // Add logic here to send the updated caption to the server if needed\n    }\n  \n    return (\n      <Box\n        height='600px'\n        width='16vw'\n        rounded='lg'\n        bg='gray.300'\n        boxShadow='lg'\n        p={8}\n      >\n        <Stack>\n          <Text size=\"16px\" fontWeight=\"bold\">Author: {props.author}</Text>\n          <Image src={props.src} />\n          <Text>Caption: {realPostText}</Text>\n          <FormControl id=\"edit form\" display={formVisible ? 'block' : 'none'}>\n            <FormLabel color=\"blue.400\">Edit Post:</FormLabel>\n            <Input\n              value={newPostText}\n              onChange={(e) => setNewPostText(e.target.value)}\n            />\n            <Button\n              onClick={handleUpdate}\n              size=\"lg\"\n              bg={'blue.400'}\n              color={'white'}\n              _hover={{\n                bg: 'blue.500',\n              }}\n            >\n              Update\n            </Button>\n          </FormControl>\n          <Button backgroundColor=\"blue.400\" textColor=\"white\" onClick={openForm}>\n            Edit\n          </Button>\n          <Button backgroundColor=\"blue.400\" textColor=\"white\">\n            Comment\n          </Button>\n        </Stack>\n      </Box>\n    );\n  }\n\nfunction Posts(props) {\n    const [page, setPage] = useState(1);\n    const perPage = 3;\n    const { user, allUsers } = useContext(UserContext);\n    const [searchTerm, setSearchTerm] = useState('');\n    // var filteredPosts\n    //var displayedPosts;\n    const [displayedPosts, setDisplayedPosts] = useState([]); // State to store fetched posts\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://peaceful-dusk-46842-f6cd8d1740b7.herokuapp.com/articles', {\n          method: 'GET',\n          credentials: 'include'\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch articles');\n        }\n\n        const data = await response.json();\n        props.setFilteredPosts(data.articles);\n      } catch (error) {\n        console.error('Error fetching articles:', error.message);\n      }\n    };\n\n    fetchData();\n  }, []);\n    \n    // if (props.filteredPosts.length < perPage) {\n    //     setDisplayedPosts(props.filteredPosts);\n    // }\n    // else {\n    //     setDisplayedPosts(props.filteredPosts.slice((page - 1) * perPage, page * perPage));\n    // }\n    console.log(props.filteredPosts);\n    return (\n        <Flex\n        \n                align='start'\n                alignItems='start'\n                \n        >\n        <Stack>\n        <Box\n                    height='100px'\n                    \n                    rounded={'lg'}\n                    bg='gray.300'\n                    boxShadow={'lg'}\n                    p={8}>\n        <Heading color='blue.400' fontSize={'4xl'} textAlign={'center'}>\n                    Posts\n        </Heading>\n        </Box>\n        <AddPost setFilteredPosts={props.setFilteredPosts}/>\n        <Box\n                    height='150px'\n                    \n                    rounded={'lg'}\n                    bg='gray.300'\n                    boxShadow={'lg'}\n                    p={8}>\n        <FormControl>\n            <FormLabel color=\"blue.400\">\n                Search for Posts:\n            </FormLabel>\n                <Input\n                        placeholder=\"Search posts\"\n                        value={searchTerm}\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                />\n        </FormControl>\n        </Box>\n        <Center>\n        <HStack spacing={4}>\n  {props.filteredPosts\n    .filter(post => (\n      (post.text && post.text.includes(searchTerm)) || (post.author && post.author.includes(searchTerm))\n    ))\n    .sort((a, b) => b.pid - a.pid)\n    .slice((page - 1) * 4, page * 4)\n    .map(post => (\n      <Post\n        key={post.pid} // Add a unique key\n        src={post.image}\n        caption={post.text}\n        author={post.author}\n      />\n    ))}\n  {props.filteredPosts.length === 0 && <p>No matching posts found.</p>}\n</HStack>\n        </Center>\n        <Center>\n        <HStack align={'center'}>\n        <Button backgroundColor=\"blue.400\" textColor=\"white\" onClick={() => setPage( () => {\n            if (page === 1) {\n                return page\n            } else {\n              console.log(page-1);\n                return page - 1\n            }\n        }\n            )}>Previous</Button>\n        <Button backgroundColor=\"blue.400\" textColor=\"white\" onClick={() => setPage( () => {\n            if (page === Math.ceil(props.filteredPosts\n              .filter(post => (\n                (post.text && post.text.includes(searchTerm)) || (post.author && post.author.includes(searchTerm))\n              )).length/4)) {\n                return page\n            } else {\n              console.log(page+1);\n                return page + 1\n            }\n        }\n            )}>Next</Button>\n        </HStack>\n        </Center>\n\n        </Stack>\n        </Flex>\n    )\n\n}\n\nfunction AddPost(props) {\n    const [newPostText, setNewPostText] = useState('');\n    const [tempImage, setTempImage] = useState(new File([], 'temp.txt'));\n    //const setFilteredPosts = props.setFilteredPosts;\n    //const { user, setUser, allUsers, setAllPosts } = useContext(UserContext);\n    //console.log(\"prev user: \" + JSON.stringify(user));\n    const clearPost = () => {\n        document.getElementById('newpost').reset();\n    }\n\n  \n    const newPost = async () => {\n        console.log(newPostText);\n        const fd = new FormData();\n          console.log(tempImage);\n          fd.append('image', tempImage);\n          fd.append('text', newPostText);\n      try {\n        const response = await fetch('https://peaceful-dusk-46842-f6cd8d1740b7.herokuapp.com/article', {\n          method: 'POST',\n          credentials: 'include',\n          body: fd\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to add article');\n        }\n        const data = await response.json();\n        console.log(data.articles);\n        props.setFilteredPosts(data.articles);\n      } catch (error) {\n        console.error('Error fetching articles:', error.message);\n      }\n      clearPost();\n    };\n\n\n    return (\n        <Box\n            height='300px'\n            width='78vw'\n            rounded={'lg'}\n            bg='gray.300'\n            boxShadow={'lg'}\n            p={8}>\n            <form id='newpost' onSubmit={(e) => {\n              e.preventDefault();\n              newPost();\n            }\n              \n              \n              }>\n                <Stack height={'200px'} spacing={5}>\n                    <Heading color='blue.400' fontSize={'3xl'} textAlign={'center'}>\n                        Add New Post\n                    </Heading>\n                    <HStack>\n                      \n                        <FormControl>\n                            <FormLabel htmlFor=\"photo\">Add Photo</FormLabel>\n                            <Input type=\"file\" id=\"photo\" accept=\"image/*\" isRequired onChange={(e) => setTempImage(e.target.files[0])}/>\n                        </FormControl>\n                        <FormControl>\n                            <FormLabel>New Post</FormLabel>\n                            <Input type=\"text\" placeholder=\"Your Post Here\" isRequired onChange={(e) => setNewPostText(e.target.value)} />\n                        </FormControl>\n                    </HStack>\n                    <Center>\n                        <HStack spacing={3}>\n                            <Button backgroundColor=\"blue.400\" textColor=\"white\" onClick={clearPost}>Clear</Button>\n                            <Button type=\"submit\" backgroundColor=\"blue.400\" textColor=\"white\" >Post</Button>\n                        </HStack>\n                    </Center>\n                </Stack>\n            </form>\n        </Box>\n    )\n}\n\n\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}